// [PackageDev] target_format: plist, ext: tmLanguage
{
    "name": "Splunk Conf file",
    "scopeName": "source.splunk-conf",
    "fileTypes": [
        "conf",
        "conf.example",
        "conf.default",
        "conf.spec",
        "conf.in",
        "conf.example.in",
        "conf.spec.in",
        "cfg.spec.in"
    ],
    "uuid": "f0634410-b562-4325-b1d1-348949cfa5bd",

    "patterns": [
        {
            "match": "^# DO NOT EDIT THIS FILE\\!$",
            "name": "invalid.illegal",
            "comment": "default conf file warning"
        },
        {
            "match": "^#.*$",
            "name": "comment.line",
            "comment": "A comment"
        },
        {
            "match": "^\\[.*\\]$",
            "name": "entity.name.function",
            "comment": "Stanza Name, any line with '[xyz]'"
        },
        {
            "comment": "Setting (can be multiline). Begins with 'key=', ends with newline without backslash",
            "begin": "^[ \\t]*([^\\n\\r ]+)[ \\t]*(=)",
            "beginCaptures": {
                "1": {
                    "name": "support.function"
                },
                "2": {
                    "name": "keyword.operator"
                }
            },
            "end":"[ \\t]*([^\\n\\r]+[^\\\\]|[^\\n\\r]+\\\\(\\r?\\n[ \\t]*[^\\n\\r]*\\\\?)*)\\r?\\n",
            // TODO: break this up into intentionally matching several groups
            // ie: 1 group just for the first line, etc.
            "endCaptures": {
                "1": {
                    "name": "constant.character"
                },
                "2": {
                    "name": "entity.name.function"
                },
                "3": {
                    "name": "keyword.operator"
                }
            },
            "name": "splunk.conf.setting"
        }
    ]
}